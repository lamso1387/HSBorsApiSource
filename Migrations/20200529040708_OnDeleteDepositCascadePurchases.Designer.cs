// <auto-generated />
using System;
using HSBors.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HSBors.Migrations
{
    [DbContext(typeof(HSBorsDb))]
    [Migration("20200529040708_OnDeleteDepositCascadePurchases")]
    partial class OnDeleteDepositCascadePurchases
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HSBors.Models.Account", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("accounter_id");

                    b.Property<DateTime>("create_date");

                    b.Property<long>("creator_id");

                    b.Property<long>("fund_id");

                    b.Property<long?>("modifier_id");

                    b.Property<DateTime?>("modify_date");

                    b.Property<string>("name");

                    b.Property<string>("no");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("accounter_id");

                    b.HasIndex("fund_id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HSBors.Models.Deposit", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("account_id");

                    b.Property<long>("amount");

                    b.Property<long>("count");

                    b.Property<DateTime>("create_date");

                    b.Property<long>("creator_id");

                    b.Property<long?>("modifier_id");

                    b.Property<DateTime?>("modify_date");

                    b.Property<int>("status");

                    b.Property<long>("unit_cost_id");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("unit_cost_id");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("HSBors.Models.Fund", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("create_date");

                    b.Property<long>("creator_id");

                    b.Property<long?>("modifier_id");

                    b.Property<DateTime?>("modify_date");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<string>("no");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("HSBors.Models.Payment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("amount");

                    b.Property<DateTime>("create_date");

                    b.Property<long>("creator_id");

                    b.Property<DateTime>("date");

                    b.Property<string>("explain");

                    b.Property<long?>("modifier_id");

                    b.Property<DateTime?>("modify_date");

                    b.Property<long>("receiver_id");

                    b.Property<long>("type_id");

                    b.HasKey("id");

                    b.HasIndex("date");

                    b.HasIndex("receiver_id");

                    b.HasIndex("type_id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("HSBors.Models.Purchase", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("amount");

                    b.Property<long?>("bank_copartner_id");

                    b.Property<int?>("bank_copartner_intrest");

                    b.Property<int?>("bank_copartner_percent");

                    b.Property<long>("buyer_id");

                    b.Property<DateTime>("create_date");

                    b.Property<long>("creator_id");

                    b.Property<long>("deposit_id");

                    b.Property<long?>("modifier_id");

                    b.Property<DateTime?>("modify_date");

                    b.HasKey("id");

                    b.HasIndex("bank_copartner_id");

                    b.HasIndex("buyer_id");

                    b.HasIndex("deposit_id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("HSBors.Models.Setting", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("create_date");

                    b.Property<long>("creator_id");

                    b.Property<string>("key")
                        .IsRequired();

                    b.Property<long?>("modifier_id");

                    b.Property<DateTime?>("modify_date");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("value")
                        .IsRequired();

                    b.HasKey("id");

                    b.HasIndex("type", "key")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("HSBors.Models.UnitCost", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("cancel_cost");

                    b.Property<DateTime>("create_date");

                    b.Property<long>("creator_id");

                    b.Property<DateTime>("date");

                    b.Property<long>("fund_id");

                    b.Property<long>("issue_cost");

                    b.Property<long?>("modifier_id");

                    b.Property<DateTime?>("modify_date");

                    b.HasKey("id");

                    b.HasIndex("fund_id", "date")
                        .IsUnique();

                    b.ToTable("UnitCosts");
                });

            modelBuilder.Entity("HSBors.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("create_date");

                    b.Property<long>("creator_id");

                    b.Property<string>("first_name")
                        .IsRequired();

                    b.Property<DateTime?>("last_login");

                    b.Property<string>("last_name")
                        .IsRequired();

                    b.Property<string>("mobile")
                        .IsRequired()
                        .IsFixedLength(true)
                        .HasMaxLength(11);

                    b.Property<long?>("modifier_id");

                    b.Property<DateTime?>("modify_date");

                    b.Property<string>("password_hash")
                        .IsRequired();

                    b.Property<int>("status");

                    b.Property<string>("username")
                        .IsRequired();

                    b.HasKey("id");

                    b.HasIndex("username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HSBors.Models.Account", b =>
                {
                    b.HasOne("HSBors.Models.User", "accounter")
                        .WithMany("accounts")
                        .HasForeignKey("accounter_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HSBors.Models.Fund", "fund")
                        .WithMany("accounts")
                        .HasForeignKey("fund_id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HSBors.Models.Deposit", b =>
                {
                    b.HasOne("HSBors.Models.Account", "account")
                        .WithMany("deposits")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HSBors.Models.UnitCost", "unit_cost")
                        .WithMany("deposits")
                        .HasForeignKey("unit_cost_id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HSBors.Models.Payment", b =>
                {
                    b.HasOne("HSBors.Models.User", "receiver")
                        .WithMany("payments")
                        .HasForeignKey("receiver_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HSBors.Models.Setting", "type")
                        .WithMany("payments")
                        .HasForeignKey("type_id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HSBors.Models.Purchase", b =>
                {
                    b.HasOne("HSBors.Models.User", "bank_copartner")
                        .WithMany("bank_partnerships")
                        .HasForeignKey("bank_copartner_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HSBors.Models.User", "buyer")
                        .WithMany("purchases")
                        .HasForeignKey("buyer_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HSBors.Models.Deposit", "deposit")
                        .WithMany("purchases")
                        .HasForeignKey("deposit_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HSBors.Models.UnitCost", b =>
                {
                    b.HasOne("HSBors.Models.Fund", "fund")
                        .WithMany("unit_costs")
                        .HasForeignKey("fund_id")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
